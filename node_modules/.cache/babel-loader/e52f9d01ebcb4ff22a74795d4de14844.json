{"ast":null,"code":"var _jsxFileName = \"F:\\\\music_webapp\\\\src\\\\components\\\\playbar\\\\child-components\\\\rightControl\\\\Musiclist\\\\playlist-item\\\\index.js\";\nimport React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { formatTime, getAudioSrc } from '@/utils/format-data';\nimport { DownloadOutlined, DeleteOutlined, LikeOutlined } from '@ant-design/icons';\nimport { PlaylistItemWrapper } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistItem(props) {\n  return /*#__PURE__*/_jsxDEV(PlaylistItemWrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // PlaylistItem.propTypes = {\n//   songName: propTypes.string.isRequired,\n//   singer: propTypes.string.isRequired,\n//   duration: propTypes.any.isRequired,\n//   isActive: propTypes.string\n// }\n\n\n_c = PlaylistItem;\nexport default _c2 = /*#__PURE__*/memo(PlaylistItem);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlaylistItem\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useDispatch","useSelector","propTypes","formatTime","getAudioSrc","DownloadOutlined","DeleteOutlined","LikeOutlined","PlaylistItemWrapper","PlaylistItem","props"],"sources":["F:/music_webapp/src/components/playbar/child-components/rightControl/Musiclist/playlist-item/index.js"],"sourcesContent":["import React, { memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport propTypes from 'prop-types'\r\n\r\nimport {formatTime, getAudioSrc} from '@/utils/format-data'\r\n\r\nimport {DownloadOutlined, DeleteOutlined, LikeOutlined} from '@ant-design/icons'\r\nimport {PlaylistItemWrapper} from './style'\r\n\r\n\r\nfunction PlaylistItem(props) {\r\n\r\n  return (\r\n    <PlaylistItemWrapper>\r\n      {/* <div className=\"song-name\">{songName}</div>\r\n      <div className=\"control-and-singer\">\r\n        <LikeOutlined />\r\n        <DownloadOutlined onClick={() => window.open(getAudioSrc(songId))} />\r\n        <DeleteOutlined onClick={(e) => clearCurrentSong(e)} />\r\n        <span>{singer}</span>\r\n      </div>\r\n      <div className=\"duration\">{formatTime(duration)}</div> */}\r\n    </PlaylistItemWrapper>\r\n  )\r\n}\r\n\r\n// PlaylistItem.propTypes = {\r\n//   songName: propTypes.string.isRequired,\r\n//   singer: propTypes.string.isRequired,\r\n//   duration: propTypes.any.isRequired,\r\n//   isActive: propTypes.string\r\n// }\r\n\r\nexport default memo(PlaylistItem)"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,qBAAtC;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,EAA0CC,YAA1C,QAA6D,mBAA7D;AACA,SAAQC,mBAAR,QAAkC,SAAlC;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAE3B,oBACE,QAAC,mBAAD;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;KArBSD,Y;AAuBT,kCAAeV,IAAI,CAACU,YAAD,CAAnB"},"metadata":{},"sourceType":"module"}