{"ast":null,"code":"var _jsxFileName = \"F:\\\\music_webapp\\\\src\\\\components\\\\playbar\\\\child-components\\\\rightControl\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { getAudioSrc } from '@/utils/format-data';\nimport { changePlaySequence, changeLyricIndex } from '../../redux/action';\nimport { DownloadOutlined, UndoOutlined } from '@ant-design/icons';\nimport { Slider } from 'antd';\nimport { CSSTransition } from 'react-transition-group';\nimport { RightWrapper } from './style';\nimport MusicList from './Musiclist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(function RightControl(props) {\n  _s();\n\n  // 组件自身状态\n  // 是否展示音量条\n  const [showVolume, setShowVolume] = useState(false); // 是否展示播放列表\n\n  const [showPlaylist, setShowPlaylist] = useState(false); // props\n\n  const {\n    musicdom,\n    playSequence,\n    songIndex,\n    playlist,\n    replay,\n    isPlaying\n  } = props;\n  const currentSong = playlist[songIndex];\n  const dispatch = useDispatch(); // 展示音量条\n\n  const handleVolume = e => {\n    e.preventDefault();\n    setShowVolume(!showVolume);\n  }; // 调整音量\n\n\n  const changeVolume = value => {\n    musicdom.current.volume = value / 100;\n  }; // 更改播放顺序\n\n\n  const handlePlaySequence = e => {\n    e.preventDefault();\n    dispatch(changePlaySequence((playSequence + 1) % 3));\n  }; // 重新播放\n\n\n  const handleReplay = e => {\n    e.preventDefault(); // 更改歌词索引\n\n    dispatch(changeLyricIndex(0)); // 重新播放\n\n    replay();\n  }; // 关闭播放列表的方法，传递给子组件\n\n\n  const closePlaylist = useCallback(() => {\n    setShowPlaylist(!showPlaylist);\n  }, [showPlaylist]);\n  return /*#__PURE__*/_jsxDEV(RightWrapper, {\n    playSequence: playSequence,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        title: \"\\u4E0B\\u8F7D\\u97F3\\u4E50\",\n        className: \"l-control download\",\n        href: currentSong && getAudioSrc(currentSong.id),\n        children: /*#__PURE__*/_jsxDEV(DownloadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        title: \"\\u91CD\\u65B0\\u64AD\\u653E\",\n        className: \"l-control refresh\",\n        onClick: handleReplay,\n        children: /*#__PURE__*/_jsxDEV(UndoOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right sprite_player\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        title: \"\\u97F3\\u91CF\",\n        className: \"sprite_player r-control volume\",\n        onClick: handleVolume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        title: playSequence === 0 ? \"顺序播放\" : playSequence === 1 ? \"随机播放\" : \"单曲循环\",\n        className: \"sprite_player r-control loop\",\n        onClick: handlePlaySequence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        title: \"\\u64AD\\u653E\\u5217\\u8868\",\n        className: \"sprite_player r-control playlist\",\n        onClick: e => {\n          e.preventDefault();\n          setShowPlaylist(!showPlaylist);\n        },\n        children: playlist.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: showPlaylist,\n      timeout: 3000,\n      classNames: \"playlist\",\n      children: /*#__PURE__*/_jsxDEV(MusicList, {\n        showPlaylist: showPlaylist,\n        closePlaylist: closePlaylist,\n        playlist: playlist,\n        isPlaying: isPlaying,\n        songIndex: songIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sprite_player top-volume\",\n      style: {\n        display: showVolume ? 'block' : 'none'\n      },\n      onMouseLeave: () => {\n        setShowVolume(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        vertical: true,\n        defaultValue: 30,\n        onChange: changeVolume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}, \"E1i4hkceiUsMSF/7rh+s6fns+7g=\", false, function () {\n  return [useDispatch];\n})), \"E1i4hkceiUsMSF/7rh+s6fns+7g=\", false, function () {\n  return [useDispatch];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useCallback","useDispatch","useSelector","shallowEqual","getAudioSrc","changePlaySequence","changeLyricIndex","DownloadOutlined","UndoOutlined","Slider","CSSTransition","RightWrapper","MusicList","RightControl","props","showVolume","setShowVolume","showPlaylist","setShowPlaylist","musicdom","playSequence","songIndex","playlist","replay","isPlaying","currentSong","dispatch","handleVolume","e","preventDefault","changeVolume","value","current","volume","handlePlaySequence","handleReplay","closePlaylist","id","length","display"],"sources":["F:/music_webapp/src/components/playbar/child-components/rightControl/index.js"],"sourcesContent":["import React, {memo, useState, useCallback} from 'react'\r\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux'\r\nimport {getAudioSrc} from '@/utils/format-data'\r\nimport {changePlaySequence, changeLyricIndex} from '../../redux/action'\r\nimport {DownloadOutlined, UndoOutlined} from '@ant-design/icons'\r\nimport {Slider} from 'antd'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport {RightWrapper} from './style'\r\nimport MusicList from './Musiclist'\r\n\r\nexport default memo(function RightControl(props) {\r\n\r\n  // 组件自身状态\r\n\r\n  // 是否展示音量条\r\n  const [showVolume, setShowVolume] = useState(false)\r\n  // 是否展示播放列表\r\n  const [showPlaylist, setShowPlaylist] = useState(false)\r\n\r\n  // props\r\n  const {musicdom, playSequence, songIndex, playlist, replay, isPlaying} = props\r\n\r\n  const currentSong = playlist[songIndex]\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // 展示音量条\r\n  const handleVolume = (e) => {\r\n    e.preventDefault()\r\n    setShowVolume(!showVolume)\r\n  }\r\n\r\n  // 调整音量\r\n  const changeVolume = (value) => {\r\n    musicdom.current.volume = value / 100\r\n  }\r\n\r\n  // 更改播放顺序\r\n  const handlePlaySequence = (e) => {\r\n    e.preventDefault()\r\n    dispatch(changePlaySequence((playSequence + 1) % 3))\r\n  }\r\n\r\n  // 重新播放\r\n  const handleReplay = (e) => {\r\n    e.preventDefault()\r\n    // 更改歌词索引\r\n    dispatch(changeLyricIndex(0))\r\n    // 重新播放\r\n    replay()\r\n  }\r\n\r\n  // 关闭播放列表的方法，传递给子组件\r\n  const closePlaylist = useCallback(() => {\r\n    setShowPlaylist(!showPlaylist)\r\n  }, [showPlaylist])\r\n\r\n\r\n  return (\r\n    <RightWrapper playSequence={playSequence}>\r\n      <div className=\"left\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" title=\"下载音乐\" className=\"l-control download\" \r\n          href={currentSong && getAudioSrc(currentSong.id)}>\r\n          <DownloadOutlined />\r\n        </a>\r\n        <a href=\"#\" title=\"重新播放\" className=\"l-control refresh\" onClick={handleReplay}><UndoOutlined /></a>\r\n      </div>\r\n      <div className=\"right sprite_player\">\r\n        <a href=\"#\" title=\"音量\" className=\"sprite_player r-control volume\" onClick={handleVolume}></a>\r\n        <a href=\"#\" title={playSequence === 0 ? \"顺序播放\" : playSequence === 1 ? \"随机播放\" : \"单曲循环\"} \r\n          className=\"sprite_player r-control loop\" onClick={handlePlaySequence}></a>\r\n        <a href=\"#\" title=\"播放列表\" className=\"sprite_player r-control playlist\"\r\n          onClick={(e) => {e.preventDefault(); setShowPlaylist(!showPlaylist)}}>\r\n          {playlist.length}\r\n        </a>\r\n      </div>\r\n      {/* 播放列表 */}\r\n      {/* 添加过渡动画 */}\r\n      <CSSTransition in={showPlaylist} timeout={3000} classNames=\"playlist\">\r\n        <MusicList showPlaylist={showPlaylist} closePlaylist={closePlaylist}\r\n          playlist={playlist} isPlaying={isPlaying} songIndex={songIndex}>\r\n        </MusicList>\r\n      </CSSTransition>\r\n      {/* Slide 音量条 */}\r\n      <div className=\"sprite_player top-volume\" style={{ display: showVolume ? 'block' : 'none'}}\r\n        onMouseLeave={() => {setShowVolume(false)}}>\r\n        <Slider vertical defaultValue={30} onChange={changeVolume}/>\r\n      </div>\r\n    </RightWrapper>\r\n  )\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}