{"ast":null,"code":"import { matchPath, Router, Switch, Route } from 'react-router';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport React from 'react';\n\nfunction matchRoutes(routes, pathname,\n/*not public API*/\nbranch) {\n  if (branch === void 0) {\n    branch = [];\n  }\n\n  routes.some(function (route) {\n    var match = route.path ? matchPath(pathname, route) : branch.length ? branch[branch.length - 1].match // use parent match\n    : Router.computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({\n        route: route,\n        match: match\n      });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, branch);\n      }\n    }\n\n    return match;\n  });\n  return branch;\n}\n\nfunction renderRoutes(routes, extraProps, switchProps) {\n  if (extraProps === void 0) {\n    extraProps = {};\n  }\n\n  if (switchProps === void 0) {\n    switchProps = {};\n  }\n\n  return routes ? React.createElement(Switch, switchProps, routes.map(function (route, i) {\n    return React.createElement(Route, {\n      key: route.key || i,\n      path: route.path,\n      exact: route.exact,\n      strict: route.strict,\n      render: function render(props) {\n        return route.render ? route.render(_extends({}, props, {}, extraProps, {\n          route: route\n        })) : React.createElement(route.component, _extends({}, props, extraProps, {\n          route: route\n        }));\n      }\n    });\n  })) : null;\n}\n\nexport { matchRoutes, renderRoutes };","map":{"version":3,"mappings":";;;;AAEA,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B;;AAA0DC,MAA1D,EAAuE;MAAbA,MAAa;IAAbA,MAAa,GAAJ,EAATA;;;EACxDF,MAAM,CAACG,IAAPH,CAAY,iBAAS;QACbI,KAAK,GAAGC,KAAK,CAACC,IAAND,GACVE,SAAS,CAACN,QAAD,EAAWI,KAAX,CADCA,GAEVH,MAAM,CAACM,MAAPN,GACEA,MAAM,CAACA,MAAM,CAACM,MAAPN,GAAgB,CAAjB,CAANA,CAA0BE,KAD5BF;IAAAA,EAEEO,MAAM,CAACC,gBAAPD,CAAwBR,QAAxBQ,EALa;;QAOfL,OAAO;MACTF,MAAM,CAACS,IAAPT,CAAY;QAAEG,KAAK,EAALA,KAAF;QAASD,KAAK,EAALA;MAAT,CAAZF;;UAEIG,KAAK,CAACL,QAAQ;QAChBD,WAAW,CAACM,KAAK,CAACL,MAAP,EAAeC,QAAf,EAAyBC,MAAzB,CAAXH;;;;WAIGK;EAfT;SAkBOF;;;AClBT,SAASU,YAAT,CAAsBZ,MAAtB,EAA8Ba,UAA9B,EAA+CC,WAA/C,EAAiE;MAAnCD,UAAmC;IAAnCA,UAAmC,GAAtB,EAAbA;;;MAAiBC,WAAkB;IAAlBA,WAAkB,GAAJ,EAAdA;;;SACtCd,MAAM,GACXe,oBAACC,MAAD,EAAYF,WAAZ,EACGd,MAAM,CAACiB,GAAPjB,CAAW,UAACK,KAAD,EAAQa,CAAR;WACVH,oBAACI,KAAD;MACEC,GAAG,EAAEf,KAAK,CAACe,GAANf,IAAaa,CADpB;MAEEZ,IAAI,EAAED,KAAK,CAACC,IAFd;MAGEe,KAAK,EAAEhB,KAAK,CAACgB,KAHf;MAIEC,MAAM,EAAEjB,KAAK,CAACiB,MAJhB;MAKEC,MAAM,EAAE,uBAAK;eACXlB,KAAK,CAACkB,MAANlB,GACEA,KAAK,CAACkB,MAANlB,cAAkBmB,KAAlB,MAA4BX,UAA5B;UAAwCR,KAAK,EAAEA;QAA/C,GADFA,GAGEU,oBAACV,KAAD,CAAOoB,SAAP,eAAqBD,KAArB,EAAgCX,UAAhC;UAA4CR,KAAK,EAAEA;QAAnD;;IATN;EADD,EADH,CADW,GAkBT","names":["matchRoutes","routes","pathname","branch","some","match","route","path","matchPath","length","Router","computeRootMatch","push","renderRoutes","extraProps","switchProps","React","Switch","map","i","Route","key","exact","strict","render","props","component"],"sources":["F:\\music_webapp\\node_modules\\react-router-config\\modules\\matchRoutes.js","F:\\music_webapp\\node_modules\\react-router-config\\modules\\renderRoutes.js"],"sourcesContent":["import { matchPath, Router } from \"react-router\";\n\nfunction matchRoutes(routes, pathname, /*not public API*/ branch = []) {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? branch[branch.length - 1].match // use parent match\n        : Router.computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, branch);\n      }\n    }\n\n    return match;\n  });\n\n  return branch;\n}\n\nexport default matchRoutes;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\n\nfunction renderRoutes(routes, extraProps = {}, switchProps = {}) {\n  return routes ? (\n    <Switch {...switchProps}>\n      {routes.map((route, i) => (\n        <Route\n          key={route.key || i}\n          path={route.path}\n          exact={route.exact}\n          strict={route.strict}\n          render={props =>\n            route.render ? (\n              route.render({ ...props, ...extraProps, route: route })\n            ) : (\n              <route.component {...props} {...extraProps} route={route} />\n            )\n          }\n        />\n      ))}\n    </Switch>\n  ) : null;\n}\n\nexport default renderRoutes;\n"]},"metadata":{},"sourceType":"module"}