{"ast":null,"code":"import { Map } from 'immutable';\nimport { CHANGE_PLAYLIST, CHANGE_CURRENT_INDEX } from './constants';\nconst initState = Map({\n  playlist: [],\n  songIndex: 0\n});\nexport default function playerReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    data\n  } = action;\n\n  switch (type) {\n    case CHANGE_PLAYLIST:\n      return preState.set('playlist', data);\n\n    case CHANGE_CURRENT_INDEX:\n      return preState.set('songIndex', data);\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"names":["Map","CHANGE_PLAYLIST","CHANGE_CURRENT_INDEX","initState","playlist","songIndex","playerReducer","preState","action","type","data","set"],"sources":["F:/music_webapp/src/components/playbar/redux/reducer.js"],"sourcesContent":["import {Map} from 'immutable'\r\nimport {CHANGE_PLAYLIST, CHANGE_CURRENT_INDEX} from './constants'\r\n\r\nconst initState = Map({\r\n  playlist: [],\r\n  songIndex: 0,\r\n})\r\n\r\nexport default function playerReducer(preState = initState, action) {\r\n  const {type, data} = action\r\n  switch(type) {\r\n    case CHANGE_PLAYLIST:\r\n      return preState.set('playlist', data)\r\n    case CHANGE_CURRENT_INDEX:\r\n      return preState.set('songIndex', data)\r\n    default:\r\n      return preState\r\n  }\r\n}"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,WAAlB;AACA,SAAQC,eAAR,EAAyBC,oBAAzB,QAAoD,aAApD;AAEA,MAAMC,SAAS,GAAGH,GAAG,CAAC;EACpBI,QAAQ,EAAE,EADU;EAEpBC,SAAS,EAAE;AAFS,CAAD,CAArB;AAKA,eAAe,SAASC,aAAT,GAAqD;EAAA,IAA9BC,QAA8B,uEAAnBJ,SAAmB;EAAA,IAARK,MAAQ;EAClE,MAAM;IAACC,IAAD;IAAOC;EAAP,IAAeF,MAArB;;EACA,QAAOC,IAAP;IACE,KAAKR,eAAL;MACE,OAAOM,QAAQ,CAACI,GAAT,CAAa,UAAb,EAAyBD,IAAzB,CAAP;;IACF,KAAKR,oBAAL;MACE,OAAOK,QAAQ,CAACI,GAAT,CAAa,WAAb,EAA0BD,IAA1B,CAAP;;IACF;MACE,OAAOH,QAAP;EANJ;AAQD"},"metadata":{},"sourceType":"module"}