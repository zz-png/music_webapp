{"ast":null,"code":"var _jsxFileName = \"F:\\\\music_webapp\\\\src\\\\components\\\\playbar\\\\child-components\\\\middleContent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getSizeImage, formatTime } from '@/utils/format-data';\nimport { Slider } from 'antd';\nimport { MidWrapper } from './style';\nimport { changeLyricIndex } from '../../redux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(function MidContent(props) {\n  _s();\n\n  const {\n    songIndex,\n    playlist,\n    lyriclist,\n    lyricIndex\n  } = useSelector(state => ({\n    songIndex: state.getIn(['player', 'songIndex']),\n    playlist: state.getIn(['player', 'playlist']),\n    lyriclist: state.getIn(['player', 'lyriclist']),\n    lyricIndex: state.getIn(['player', 'lyricIndex'])\n  }));\n  const currentSong = playlist && playlist[songIndex];\n  const lyric = lyriclist && lyriclist[songIndex]; // playedTime\n\n  const {\n    musicdom,\n    playTime,\n    setPlayTime,\n    sliderValue,\n    setSliderValue,\n    setFlag\n  } = props; // 拖动进度条\n\n  const sliderBeforeChange = useCallback(value => {\n    // 拖动时让右边的播放时间跟着改变，进度条的值也要改变(红色色块跟随一起变)\n    setFlag(true);\n    let time = value / 100 * currentSong.dt;\n    setPlayTime(time);\n    setSliderValue(value);\n  }, [currentSong]); // 松开进度条\n\n  const dispatch = useDispatch();\n  const sliderAfterChange = useCallback(value => {\n    const time = value * currentSong.dt / 100000;\n    musicdom.current.currentTime = time; // 更改歌词索引\n\n    let i = 0;\n\n    for (; i < (lyric && lyric.length); i++) {\n      if (time * 1000 < lyric[i].totalTime) {\n        break;\n      }\n    }\n\n    dispatch(changeLyricIndex(i - 1));\n    setFlag(false);\n  }, [currentSong]);\n  return /*#__PURE__*/_jsxDEV(MidWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/discover/song\",\n      className: \"sprite_player image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentSong && getSizeImage(currentSong.al.picUrl, 34),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/discover/song\",\n          className: \"song-name\",\n          children: currentSong && currentSong.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"singer-name\",\n          children: currentSong && currentSong.ar[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        tooltipVisible: false,\n        value: sliderValue,\n        onChange: sliderBeforeChange,\n        onAfterChange: sliderAfterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-time\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"now-time\",\n        children: formatTime(playTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-time\",\n        children: [\"\\xA0/\\xA0\", currentSong ? formatTime(currentSong.dt) : '00:00']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}, \"QC+AUtWtDJtvfa+W8AQSC/Gde0Q=\", false, function () {\n  return [useSelector, useDispatch];\n})), \"QC+AUtWtDJtvfa+W8AQSC/Gde0Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useCallback","useSelector","useDispatch","shallowEqual","NavLink","getSizeImage","formatTime","Slider","MidWrapper","changeLyricIndex","MidContent","props","songIndex","playlist","lyriclist","lyricIndex","state","getIn","currentSong","lyric","musicdom","playTime","setPlayTime","sliderValue","setSliderValue","setFlag","sliderBeforeChange","value","time","dt","dispatch","sliderAfterChange","current","currentTime","i","length","totalTime","al","picUrl","name","ar"],"sources":["F:/music_webapp/src/components/playbar/child-components/middleContent/index.js"],"sourcesContent":["import React, {memo, useCallback} from 'react'\r\nimport {useSelector, useDispatch, shallowEqual} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nimport {getSizeImage, formatTime} from '@/utils/format-data'\r\nimport {Slider} from 'antd'\r\nimport {MidWrapper} from './style'\r\nimport { changeLyricIndex } from '../../redux/action'\r\n\r\nexport default memo(function MidContent(props) {\r\n\r\n  const {songIndex, playlist, lyriclist, lyricIndex} = useSelector((state) => ({\r\n      songIndex: state.getIn(['player', 'songIndex']),\r\n      playlist: state.getIn(['player', 'playlist']),\r\n      lyriclist: state.getIn(['player', 'lyriclist']),\r\n      lyricIndex: state.getIn(['player', 'lyricIndex']),\r\n    })\r\n  )\r\n  const currentSong = playlist && playlist[songIndex]\r\n  const lyric = lyriclist && lyriclist[songIndex]\r\n\r\n  // playedTime\r\n  const {musicdom, playTime, setPlayTime, sliderValue, setSliderValue, setFlag} = props\r\n\r\n  // 拖动进度条\r\n  const sliderBeforeChange = useCallback((value) => {\r\n    // 拖动时让右边的播放时间跟着改变，进度条的值也要改变(红色色块跟随一起变)\r\n    setFlag(true)\r\n    let time = (value / 100) * currentSong.dt\r\n    setPlayTime(time)\r\n    setSliderValue(value)\r\n  }, [currentSong])\r\n\r\n  // 松开进度条\r\n  const dispatch = useDispatch()\r\n  const sliderAfterChange = useCallback((value) => {\r\n    const time = (value * currentSong.dt) / 100000\r\n    musicdom.current.currentTime = time\r\n    // 更改歌词索引\r\n    let i = 0\r\n    for(; i < (lyric && lyric.length); i++) {\r\n      if(time * 1000 < lyric[i].totalTime) {\r\n        break\r\n      }\r\n    }\r\n    dispatch(changeLyricIndex(i - 1))\r\n    setFlag(false)\r\n  },[currentSong])\r\n\r\n  return (\r\n    <MidWrapper>\r\n      <NavLink to='/discover/song' className=\"sprite_player image\">\r\n        <img src={currentSong && getSizeImage(currentSong.al.picUrl, 34)} alt=\"\" />\r\n      </NavLink>\r\n      <div className=\"play-detail\">\r\n        <div className=\"song-info\">\r\n          <NavLink to=\"/discover/song\" className=\"song-name\">{currentSong && currentSong.name}</NavLink>\r\n          <a href=\"#\" className=\"singer-name\">{currentSong && currentSong.ar[0].name}</a>\r\n        </div>\r\n        <Slider tooltipVisible={false} value={sliderValue} onChange={sliderBeforeChange} onAfterChange={sliderAfterChange}/>\r\n      </div>\r\n      <div className=\"song-time\">\r\n        <span className=\"now-time\">{formatTime(playTime)}</span>\r\n        <span className=\"total-time\">&nbsp;/&nbsp;{currentSong ? formatTime(currentSong.dt) : '00:00'}</span>\r\n      </div>\r\n    </MidWrapper>\r\n  )\r\n})\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,WAArB,QAAuC,OAAvC;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,YAAlC,QAAqD,aAArD;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAGA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,qBAAvC;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,SAAQC,UAAR,QAAyB,SAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,mDAAeV,IAAI,SAAC,SAASW,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EAE7C,MAAM;IAACC,SAAD;IAAYC,QAAZ;IAAsBC,SAAtB;IAAiCC;EAAjC,IAA+Cd,WAAW,CAAEe,KAAD,KAAY;IACzEJ,SAAS,EAAEI,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,WAAX,CAAZ,CAD8D;IAEzEJ,QAAQ,EAAEG,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,UAAX,CAAZ,CAF+D;IAGzEH,SAAS,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,WAAX,CAAZ,CAH8D;IAIzEF,UAAU,EAAEC,KAAK,CAACC,KAAN,CAAY,CAAC,QAAD,EAAW,YAAX,CAAZ;EAJ6D,CAAZ,CAAD,CAAhE;EAOA,MAAMC,WAAW,GAAGL,QAAQ,IAAIA,QAAQ,CAACD,SAAD,CAAxC;EACA,MAAMO,KAAK,GAAGL,SAAS,IAAIA,SAAS,CAACF,SAAD,CAApC,CAV6C,CAY7C;;EACA,MAAM;IAACQ,QAAD;IAAWC,QAAX;IAAqBC,WAArB;IAAkCC,WAAlC;IAA+CC,cAA/C;IAA+DC;EAA/D,IAA0Ed,KAAhF,CAb6C,CAe7C;;EACA,MAAMe,kBAAkB,GAAG1B,WAAW,CAAE2B,KAAD,IAAW;IAChD;IACAF,OAAO,CAAC,IAAD,CAAP;IACA,IAAIG,IAAI,GAAID,KAAK,GAAG,GAAT,GAAgBT,WAAW,CAACW,EAAvC;IACAP,WAAW,CAACM,IAAD,CAAX;IACAJ,cAAc,CAACG,KAAD,CAAd;EACD,CANqC,EAMnC,CAACT,WAAD,CANmC,CAAtC,CAhB6C,CAwB7C;;EACA,MAAMY,QAAQ,GAAG5B,WAAW,EAA5B;EACA,MAAM6B,iBAAiB,GAAG/B,WAAW,CAAE2B,KAAD,IAAW;IAC/C,MAAMC,IAAI,GAAID,KAAK,GAAGT,WAAW,CAACW,EAArB,GAA2B,MAAxC;IACAT,QAAQ,CAACY,OAAT,CAAiBC,WAAjB,GAA+BL,IAA/B,CAF+C,CAG/C;;IACA,IAAIM,CAAC,GAAG,CAAR;;IACA,OAAMA,CAAC,IAAIf,KAAK,IAAIA,KAAK,CAACgB,MAAnB,CAAP,EAAmCD,CAAC,EAApC,EAAwC;MACtC,IAAGN,IAAI,GAAG,IAAP,GAAcT,KAAK,CAACe,CAAD,CAAL,CAASE,SAA1B,EAAqC;QACnC;MACD;IACF;;IACDN,QAAQ,CAACrB,gBAAgB,CAACyB,CAAC,GAAG,CAAL,CAAjB,CAAR;IACAT,OAAO,CAAC,KAAD,CAAP;EACD,CAZoC,EAYnC,CAACP,WAAD,CAZmC,CAArC;EAcA,oBACE,QAAC,UAAD;IAAA,wBACE,QAAC,OAAD;MAAS,EAAE,EAAC,gBAAZ;MAA6B,SAAS,EAAC,qBAAvC;MAAA,uBACE;QAAK,GAAG,EAAEA,WAAW,IAAIb,YAAY,CAACa,WAAW,CAACmB,EAAZ,CAAeC,MAAhB,EAAwB,EAAxB,CAArC;QAAkE,GAAG,EAAC;MAAtE;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAK,SAAS,EAAC,WAAf;QAAA,wBACE,QAAC,OAAD;UAAS,EAAE,EAAC,gBAAZ;UAA6B,SAAS,EAAC,WAAvC;UAAA,UAAoDpB,WAAW,IAAIA,WAAW,CAACqB;QAA/E;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,IAAI,EAAC,GAAR;UAAY,SAAS,EAAC,aAAtB;UAAA,UAAqCrB,WAAW,IAAIA,WAAW,CAACsB,EAAZ,CAAe,CAAf,EAAkBD;QAAtE;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,MAAD;QAAQ,cAAc,EAAE,KAAxB;QAA+B,KAAK,EAAEhB,WAAtC;QAAmD,QAAQ,EAAEG,kBAA7D;QAAiF,aAAa,EAAEK;MAAhG;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAWE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAM,SAAS,EAAC,UAAhB;QAAA,UAA4BzB,UAAU,CAACe,QAAD;MAAtC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,SAAS,EAAC,YAAhB;QAAA,wBAA2CH,WAAW,GAAGZ,UAAU,CAACY,WAAW,CAACW,EAAb,CAAb,GAAgC,OAAtF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA1DkB;EAAA,QAEoC5B,WAFpC,EAyBAC,WAzBA;AAAA,GAAnB;EAAA,QAEuDD,WAFvD,EAyBmBC,WAzBnB;AAAA"},"metadata":{},"sourceType":"module"}